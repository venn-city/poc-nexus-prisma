"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _types_1 = require("./_types");
var graphql_1 = require("graphql");
var UnionDefinitionBlock = /** @class */ (function () {
    function UnionDefinitionBlock(typeBuilder) {
        this.typeBuilder = typeBuilder;
    }
    /**
     * All ObjectType names that should be part of the union, either
     * as string names or as references to the `objectType()` return value
     */
    UnionDefinitionBlock.prototype.members = function () {
        var unionMembers = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            unionMembers[_i] = arguments[_i];
        }
        this.typeBuilder.addUnionMembers(unionMembers);
    };
    /**
     * Sets the "resolveType" method for the current union
     */
    UnionDefinitionBlock.prototype.resolveType = function (fn) {
        this.typeBuilder.setResolveType(fn);
    };
    return UnionDefinitionBlock;
}());
exports.UnionDefinitionBlock = UnionDefinitionBlock;
var NexusUnionTypeDef = /** @class */ (function () {
    function NexusUnionTypeDef(name, config) {
        this.name = name;
        this.config = config;
        graphql_1.assertValidName(name);
    }
    Object.defineProperty(NexusUnionTypeDef.prototype, "value", {
        get: function () {
            return this.config;
        },
        enumerable: true,
        configurable: true
    });
    return NexusUnionTypeDef;
}());
exports.NexusUnionTypeDef = NexusUnionTypeDef;
_types_1.withNexusSymbol(NexusUnionTypeDef, _types_1.NexusTypes.Union);
/**
 * Defines a new `GraphQLUnionType`
 * @param config
 */
function unionType(config) {
    return new NexusUnionTypeDef(config.name, config);
}
exports.unionType = unionType;
//# sourceMappingURL=unionType.js.map