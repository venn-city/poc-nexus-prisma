import { OutputDefinitionBlock } from "./definitionBlocks";
import { GetGen } from "../typegenTypeHelpers";
export interface NexusExtendTypeConfig<TypeName extends string> {
  type: TypeName;
  definition(t: OutputDefinitionBlock<TypeName>): void;
}
export declare class NexusExtendTypeDef<TypeName extends string> {
  readonly name: TypeName;
  protected config: NexusExtendTypeConfig<string> & {
    name: string;
  };
  constructor(
    name: TypeName,
    config: NexusExtendTypeConfig<string> & {
      name: string;
    }
  );
  readonly value: NexusExtendTypeConfig<string> & {
    name: string;
  };
}
/**
 * Adds new fields to an existing objectType in the schema. Useful when
 * splitting your schema across several domains.
 *
 * @see http://graphql-nexus.com/api/extendType
 */
export declare function extendType<
  TypeName extends GetGen<"objectNames", string> | "Query" | "Mutation"
>(config: NexusExtendTypeConfig<TypeName>): NexusExtendTypeDef<TypeName>;
