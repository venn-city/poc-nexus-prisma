"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _types_1 = require("./definitions/_types");
var DynamicInputMethodDef = /** @class */ (function () {
    function DynamicInputMethodDef(name, config) {
        this.name = name;
        this.config = config;
    }
    Object.defineProperty(DynamicInputMethodDef.prototype, "value", {
        get: function () {
            return this.config;
        },
        enumerable: true,
        configurable: true
    });
    return DynamicInputMethodDef;
}());
exports.DynamicInputMethodDef = DynamicInputMethodDef;
_types_1.withNexusSymbol(DynamicInputMethodDef, _types_1.NexusTypes.DynamicInput);
var DynamicOutputMethodDef = /** @class */ (function () {
    function DynamicOutputMethodDef(name, config) {
        this.name = name;
        this.config = config;
    }
    Object.defineProperty(DynamicOutputMethodDef.prototype, "value", {
        get: function () {
            return this.config;
        },
        enumerable: true,
        configurable: true
    });
    return DynamicOutputMethodDef;
}());
exports.DynamicOutputMethodDef = DynamicOutputMethodDef;
_types_1.withNexusSymbol(DynamicOutputMethodDef, _types_1.NexusTypes.DynamicOutput);
/**
 * Defines a new property on the object definition block
 * for an output type, taking arbitrary input to define
 * additional types.
 *
 * t.collection('posts', {
 *   nullable: true,
 *   totalCount(root, args, ctx, info) {
 *     return ctx.user.getTotalPostCount(root.id, args)
 *   },
 *   nodes(root, args, ctx, info) {
 *     return ctx.user.getPosts(root.id, args)
 *   }
 * })
 */
function dynamicOutputMethod(config) {
    return new DynamicOutputMethodDef(config.name, config);
}
exports.dynamicOutputMethod = dynamicOutputMethod;
/**
 * Same as the outputFieldExtension, but for fields that
 * should be added on as input types.
 */
function dynamicInputMethod(config) {
    return new DynamicInputMethodDef(config.name, config);
}
exports.dynamicInputMethod = dynamicInputMethod;
//# sourceMappingURL=dynamicMethod.js.map