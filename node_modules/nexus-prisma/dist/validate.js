"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function validateDatamodelInfo(datamodelInfo) {
    if (!datamodelInfo.uniqueFieldsByModel ||
        !datamodelInfo.clientPath ||
        !datamodelInfo.schema ||
        !datamodelInfo.embeddedTypes) {
        throw new Error("Invalid `prisma.datamodelInfo` property. This should be imported from the `nexus-prisma-generate` output directory.\nIf you just updated nexus-prisma, try re-running `nexus-prisma-generate`.\n      ");
    }
}
function validateClient(client) {
    if (typeof client !== 'function' &&
        (!client.$exists || !client.$graphql)) {
        throw new Error("Invalid `prisma.client` property in `makePrismaSchema({ prisma: { client: ... } })`.\nThis should either be an instance of the generated prisma-client, or a function that returns the prisma-client instance from your GraphQL server context\n");
    }
}
function validateOptions(options) {
    if (!options.prisma) {
        throw new Error('Missing `prisma` property in `makePrismaSchema({ prisma: { ... } })`');
    }
    if (!options.prisma.datamodelInfo) {
        throw new Error('Missing `prisma.datamodelInfo` property in `makePrismaSchema({ prisma: { datamodelInfo: ... } })`');
    }
    // Do not pass the object as is to enforce a type error if one of the properties aren't checked
    // /!\ Passing a new property doesn't guaranty that it is checked within the function
    validateDatamodelInfo({
        clientPath: options.prisma.datamodelInfo.clientPath,
        embeddedTypes: options.prisma.datamodelInfo.embeddedTypes,
        schema: options.prisma.datamodelInfo.schema,
        uniqueFieldsByModel: options.prisma.datamodelInfo.uniqueFieldsByModel,
    });
    if (!options.prisma.client) {
        throw new Error('Missing `prisma.client` property in `makePrismaSchema({ prisma: { client: ... } })`');
    }
    validateClient(options.prisma.client);
}
exports.validateOptions = validateOptions;
//# sourceMappingURL=validate.js.map