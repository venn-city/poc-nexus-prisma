"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_1 = require("graphql");
function isRequired(type) {
    return graphql_1.isNonNullType(type);
}
exports.isRequired = isRequired;
function isList(type) {
    if (graphql_1.isNonNullType(type)) {
        return isList(type.ofType);
    }
    return graphql_1.isListType(type);
}
exports.isList = isList;
function getFinalType(type) {
    if (graphql_1.isListType(type) || graphql_1.isNonNullType(type)) {
        return getFinalType(type.ofType);
    }
    return type;
}
exports.getFinalType = getFinalType;
function getTypeName(type) {
    return getFinalType(type).name;
}
exports.getTypeName = getTypeName;
function findObjectType(typeName, schema) {
    var graphQLType = schema.getType(typeName);
    if (!graphQLType) {
        throw new Error("Type '" + typeName + "' not found in Prisma API");
    }
    return graphQLType;
}
exports.findObjectType = findObjectType;
function findGraphQLTypeField(typeName, fieldName, schema) {
    var objectType = findObjectType(typeName, schema);
    var objectField = Object.values(objectType.getFields()).find(function (field) { return field.name === fieldName; });
    if (!objectField) {
        throw new Error("Field " + typeName + "." + fieldName + " not found in Prisma API");
    }
    return objectField;
}
exports.findGraphQLTypeField = findGraphQLTypeField;
//# sourceMappingURL=graphql.js.map